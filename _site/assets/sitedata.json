

{
  "pages": [
    {
      
      
      
      "content": "\n",
      "url": "/404.html"
    },{
      
      "title": "Blog",
      "description": "The official Hydejack blog. Version updates, example content and how-to guides on how to blog with Jekyll.\n",
      "content": "\n",
      "url": "/blog/"
    },{
      
      
      
      "content": "\n",
      "url": "/offline.html"
    },{
      
      "title": "Posts",
      "description": "This is the list layout for showing blog posts, which shows just the title and groups them by year of publication. Check out the blog layout for comparison.\n",
      "content": "\n",
      "url": "/posts/"
    },{
      
      "title": "Projects",
      "description": "How people are using Hydejack in the real world.  This page is built using the projects layout* that you can use yourself to build a portfolio.\n",
      "content": "If you’d like to have your blog or project featured here, please contact me at mail@qwtel.com.\n\n\n",
      "url": "/projects/"
    },{
      
      "title": "Résumé*",
      "description": "This is the description of your resume page, as it will be seen by search engines. You’ll probably want to modify it in resume.md, and maybe set hide_description to true in the front matter.\n",
      "content": "\n",
      "url": "/resume/"
    },{
      
      "title": "Blog",
      "description": "The official Hydejack blog. Version updates, example content and how-to guides on how to blog with Jekyll.\n",
      "content": "\n",
      "url": "/blog/2/"
    }
  ], 
  "documents": [
    {
      
      "title": "Example Content",
      "date": "2012-02-07 00:00:00 -0800",
      "description": "Howdy! This is an example blog post that shows several types of HTML content supported in this theme.\n",
      "content": "Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.\n\n\n  Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.\n\n\nEtiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.\n\nInline HTML elements\n\nHTML defines a long list of available inline tags, a complete list of which can be found on the Mozilla Developer Network.\n\n\n  To bold text, use **To bold text**.\n  To italicize text, use *To italicize text*.\n  Abbreviations, like HTML should be defined like this *[HTML]: HyperText Markup Language.\n  Citations, like — Mark otto, should use &lt;cite&gt;.\n  Deleted text should use ~~deleted~~ and inserted text should use &lt;ins&gt;.\n  Superscript text uses &lt;sup&gt; and subscript text uses &lt;sub&gt;.\n\n\nMost of these elements are styled by browsers with few modifications on our part.\n\nHeading 2\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n\nHeading 3\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor.\n\nHeading 4\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor.\n\nHeading 5\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor.\n\nHeading 6\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor.\n\nCode\n\nCum sociis natoque penatibus et magnis dis code element montes, nascetur ridiculus mus.\n\n// Example can be run directly in your JavaScript console\n\n// Create a function that takes two arguments and returns the sum of those\n// arguments\nvar adder = new Function(\"a\", \"b\", \"return a + b\");\n\n// Call the function\nadder(2, 6);\n// &gt; 8\n\n\nLists\n\nCum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.\n\n\n  Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n  Donec id elit non mi porta gravida at eget metus.\n  Nulla vitae elit libero, a pharetra augue.\n\n\nDonec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.\n\n\n  Vestibulum id ligula porta felis euismod semper.\n  Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n  Maecenas sed diam eget risus varius blandit sit amet non magna.\n\n\nCras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.\n\n\n  HyperText Markup Language (HTML)\n  The language used to describe and define the content of a Web page\n  Cascading Style Sheets (CSS)\n  Used to describe the appearance of Web content\n  JavaScript (JS)\n  The programming language used to build advanced Web sites and applications\n\n\nInteger posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.\n\nImages\n\nQuisque consequat sapien eget quam rhoncus, sit amet laoreet diam tempus. Aliquam aliquam metus erat, a pulvinar turpis suscipit at.\n\n\n\n\n\n\n\nTables\n\nAenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n\n\n  \n    \n      Name\n      Upvotes\n      Downvotes\n    \n  \n  \n    \n      Alice\n      10\n      11\n    \n    \n      Bob\n      4\n      3\n    \n    \n      Charlie\n      7\n      9\n    \n  \n  \n    \n      Totals\n      21\n      23\n    \n  \n\n\nNullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.\n\n",
      "categories": ["data_analytics"],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/data_analytics/2012-02-07-example-content/"
    },{
      
      "title": "Example Content",
      "date": "2012-02-07 00:00:00 -0800",
      "description": "Howdy! This is an example blog post that shows several types of HTML content supported in this theme.\n",
      "content": "Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.\n\n\n  Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.\n\n\nEtiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.\n\nInline HTML elements\n\nHTML defines a long list of available inline tags, a complete list of which can be found on the Mozilla Developer Network.\n\n\n  To bold text, use **To bold text**.\n  To italicize text, use *To italicize text*.\n  Abbreviations, like HTML should be defined like this *[HTML]: HyperText Markup Language.\n  Citations, like — Mark otto, should use &lt;cite&gt;.\n  Deleted text should use ~~deleted~~ and inserted text should use &lt;ins&gt;.\n  Superscript text uses &lt;sup&gt; and subscript text uses &lt;sub&gt;.\n\n\nMost of these elements are styled by browsers with few modifications on our part.\n\nHeading 2\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n\nHeading 3\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor.\n\nHeading 4\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor.\n\nHeading 5\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor.\n\nHeading 6\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor.\n\nCode\n\nCum sociis natoque penatibus et magnis dis code element montes, nascetur ridiculus mus.\n\n// Example can be run directly in your JavaScript console\n\n// Create a function that takes two arguments and returns the sum of those\n// arguments\nvar adder = new Function(\"a\", \"b\", \"return a + b\");\n\n// Call the function\nadder(2, 6);\n// &gt; 8\n\n\nLists\n\nCum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.\n\n\n  Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n  Donec id elit non mi porta gravida at eget metus.\n  Nulla vitae elit libero, a pharetra augue.\n\n\nDonec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.\n\n\n  Vestibulum id ligula porta felis euismod semper.\n  Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n  Maecenas sed diam eget risus varius blandit sit amet non magna.\n\n\nCras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.\n\n\n  HyperText Markup Language (HTML)\n  The language used to describe and define the content of a Web page\n  Cascading Style Sheets (CSS)\n  Used to describe the appearance of Web content\n  JavaScript (JS)\n  The programming language used to build advanced Web sites and applications\n\n\nInteger posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.\n\nImages\n\nQuisque consequat sapien eget quam rhoncus, sit amet laoreet diam tempus. Aliquam aliquam metus erat, a pulvinar turpis suscipit at.\n\n\n\n\n\n\n\nTables\n\nAenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n\n\n  \n    \n      Name\n      Upvotes\n      Downvotes\n    \n  \n  \n    \n      Alice\n      10\n      11\n    \n    \n      Bob\n      4\n      3\n    \n    \n      Charlie\n      7\n      9\n    \n  \n  \n    \n      Totals\n      21\n      23\n    \n  \n\n\nNullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.\n\n",
      "categories": ["payments"],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/payments/2012-02-07-example-content/"
    },{
      
      "title": "Example Content",
      "date": "2012-02-07 00:00:00 -0800",
      "description": "Howdy! This is an example blog post that shows several types of HTML content supported in this theme.\n",
      "content": "Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.\n\n\n  Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.\n\n\nEtiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.\n\nInline HTML elements\n\nHTML defines a long list of available inline tags, a complete list of which can be found on the Mozilla Developer Network.\n\n\n  To bold text, use **To bold text**.\n  To italicize text, use *To italicize text*.\n  Abbreviations, like HTML should be defined like this *[HTML]: HyperText Markup Language.\n  Citations, like — Mark otto, should use &lt;cite&gt;.\n  Deleted text should use ~~deleted~~ and inserted text should use &lt;ins&gt;.\n  Superscript text uses &lt;sup&gt; and subscript text uses &lt;sub&gt;.\n\n\nMost of these elements are styled by browsers with few modifications on our part.\n\nHeading 2\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n\nHeading 3\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor.\n\nHeading 4\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor.\n\nHeading 5\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor.\n\nHeading 6\nVivamus sagittis lacus vel augue rutrum faucibus dolor auctor.\n\nCode\n\nCum sociis natoque penatibus et magnis dis code element montes, nascetur ridiculus mus.\n\n// Example can be run directly in your JavaScript console\n\n// Create a function that takes two arguments and returns the sum of those\n// arguments\nvar adder = new Function(\"a\", \"b\", \"return a + b\");\n\n// Call the function\nadder(2, 6);\n// &gt; 8\n\n\nLists\n\nCum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.\n\n\n  Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n  Donec id elit non mi porta gravida at eget metus.\n  Nulla vitae elit libero, a pharetra augue.\n\n\nDonec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.\n\n\n  Vestibulum id ligula porta felis euismod semper.\n  Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n  Maecenas sed diam eget risus varius blandit sit amet non magna.\n\n\nCras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.\n\n\n  HyperText Markup Language (HTML)\n  The language used to describe and define the content of a Web page\n  Cascading Style Sheets (CSS)\n  Used to describe the appearance of Web content\n  JavaScript (JS)\n  The programming language used to build advanced Web sites and applications\n\n\nInteger posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.\n\nImages\n\nQuisque consequat sapien eget quam rhoncus, sit amet laoreet diam tempus. Aliquam aliquam metus erat, a pulvinar turpis suscipit at.\n\n\n\n\n\n\n\nTables\n\nAenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n\n\n  \n    \n      Name\n      Upvotes\n      Downvotes\n    \n  \n  \n    \n      Alice\n      10\n      11\n    \n    \n      Bob\n      4\n      3\n    \n    \n      Charlie\n      7\n      9\n    \n  \n  \n    \n      Totals\n      21\n      23\n    \n  \n\n\nNullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.\n\n",
      "categories": ["rcode"],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/rcode/2012-02-07-example-content/"
    },{
      "image": "/assets/img/blog/example-content-ii.jpg",
      "title": "Example Content II",
      "date": "2017-11-23 00:00:00 -0800",
      "description": "A page showing how regular markdown content is styled in Hydejack.\n",
      "content": "There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project.\n\nThere should be whitespace between paragraphs.\n\nText can be bold, italic, or strikethrough.\n\nLink to another page.\n\n\n  Header 2    \n      Header 3        \n          Header 4            \n              Header 5                \n                  Header 6\n                \n              \n            \n          \n        \n      \n      There’s a horizontal rule below this.\n      Here is an unordered list:\n      And an ordered list:\n      And a nested list:\n      Small image\n      Large image\n      Definition lists\n    \n  \n\n\nHeader 2\n\nThis is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.\n\nHeader 3\n\n\n  This is a blockquote following a header.\n\n  When something is important enough, you do it even if the odds are not in your favor.\n\n\n// Javascript code with syntax highlighting.\nvar fun = function lang(l) {\n  dateformat.i18n = require('./lang/' + l)\n  return true;\n}\n\n\n# Ruby code with syntax highlighting\nGitHubPages::Dependencies.gems.each do |gem, version|\n  s.add_dependency(gem, \"= #{version}\")\nend\n\n\nHeader 4\n\n\n  This is an unordered list following a header.\n  This is an unordered list following a header.\n  This is an unordered list following a header.\n\n\nHeader 5\n\n\n  This is an ordered list following a header.\n  This is an ordered list following a header.\n  This is an ordered list following a header.\n\n\nHeader 6\n\n\n  \n    \n      head1\n      head two\n      three\n    \n  \n  \n    \n      ok\n      good swedish fish\n      nice\n    \n    \n      out of stock\n      good and plenty\n      nice\n    \n    \n      ok\n      good oreos\n      hmm\n    \n    \n      ok\n      good zoute drop\n      yumm\n    \n  \n\n\nThere’s a horizontal rule below this.\n\n\n\nHere is an unordered list:\n\n\n  Item foo\n  Item bar\n  Item baz\n  Item zip\n\n\nAnd an ordered list:\n\n\n  Item one\n  Item two\n  Item three\n  Item four\n\n\nAnd a nested list:\n\n\n  level 1 item\n    \n      level 2 item\n      level 2 item\n        \n          level 3 item\n          level 3 item\n        \n      \n    \n  \n  level 1 item\n    \n      level 2 item\n      level 2 item\n      level 2 item\n    \n  \n  level 1 item\n    \n      level 2 item\n      level 2 item\n    \n  \n  level 1 item\n\n\nSmall image\n\n\n\nLarge image\n\n\n\nDefinition lists\n\n\n  Name\n  Godzilla\n  Born\n  1952\n  Birthplace\n  Japan\n  Color\n  Green\n\n\nLong, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Or is it?\n\n\nThe final element.\n\n",
      "categories": ["data_analytics"],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/data_analytics/2017-11-23-example-content-ii/"
    },{
      "image": "/assets/img/blog/example-content-ii.jpg",
      "title": "Example Content II",
      "date": "2017-11-23 00:00:00 -0800",
      "description": "A page showing how regular markdown content is styled in Hydejack.\n",
      "content": "There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project.\n\nThere should be whitespace between paragraphs.\n\nText can be bold, italic, or strikethrough.\n\nLink to another page.\n\n\n  Header 2    \n      Header 3        \n          Header 4            \n              Header 5                \n                  Header 6\n                \n              \n            \n          \n        \n      \n      There’s a horizontal rule below this.\n      Here is an unordered list:\n      And an ordered list:\n      And a nested list:\n      Small image\n      Large image\n      Definition lists\n    \n  \n\n\nHeader 2\n\nThis is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.\n\nHeader 3\n\n\n  This is a blockquote following a header.\n\n  When something is important enough, you do it even if the odds are not in your favor.\n\n\n// Javascript code with syntax highlighting.\nvar fun = function lang(l) {\n  dateformat.i18n = require('./lang/' + l)\n  return true;\n}\n\n\n# Ruby code with syntax highlighting\nGitHubPages::Dependencies.gems.each do |gem, version|\n  s.add_dependency(gem, \"= #{version}\")\nend\n\n\nHeader 4\n\n\n  This is an unordered list following a header.\n  This is an unordered list following a header.\n  This is an unordered list following a header.\n\n\nHeader 5\n\n\n  This is an ordered list following a header.\n  This is an ordered list following a header.\n  This is an ordered list following a header.\n\n\nHeader 6\n\n\n  \n    \n      head1\n      head two\n      three\n    \n  \n  \n    \n      ok\n      good swedish fish\n      nice\n    \n    \n      out of stock\n      good and plenty\n      nice\n    \n    \n      ok\n      good oreos\n      hmm\n    \n    \n      ok\n      good zoute drop\n      yumm\n    \n  \n\n\nThere’s a horizontal rule below this.\n\n\n\nHere is an unordered list:\n\n\n  Item foo\n  Item bar\n  Item baz\n  Item zip\n\n\nAnd an ordered list:\n\n\n  Item one\n  Item two\n  Item three\n  Item four\n\n\nAnd a nested list:\n\n\n  level 1 item\n    \n      level 2 item\n      level 2 item\n        \n          level 3 item\n          level 3 item\n        \n      \n    \n  \n  level 1 item\n    \n      level 2 item\n      level 2 item\n      level 2 item\n    \n  \n  level 1 item\n    \n      level 2 item\n      level 2 item\n    \n  \n  level 1 item\n\n\nSmall image\n\n\n\nLarge image\n\n\n\nDefinition lists\n\n\n  Name\n  Godzilla\n  Born\n  1952\n  Birthplace\n  Japan\n  Color\n  Green\n\n\nLong, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Or is it?\n\n\nThe final element.\n\n",
      "categories": ["payments"],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/payments/2017-11-23-example-content-ii/"
    },{
      "image": "/assets/img/blog/example-content-ii.jpg",
      "title": "Example Content II",
      "date": "2017-11-23 00:00:00 -0800",
      "description": "A page showing how regular markdown content is styled in Hydejack.\n",
      "content": "There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project.\n\nThere should be whitespace between paragraphs.\n\nText can be bold, italic, or strikethrough.\n\nLink to another page.\n\n\n  Header 2    \n      Header 3        \n          Header 4            \n              Header 5                \n                  Header 6\n                \n              \n            \n          \n        \n      \n      There’s a horizontal rule below this.\n      Here is an unordered list:\n      And an ordered list:\n      And a nested list:\n      Small image\n      Large image\n      Definition lists\n    \n  \n\n\nHeader 2\n\nThis is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.\n\nHeader 3\n\n\n  This is a blockquote following a header.\n\n  When something is important enough, you do it even if the odds are not in your favor.\n\n\n// Javascript code with syntax highlighting.\nvar fun = function lang(l) {\n  dateformat.i18n = require('./lang/' + l)\n  return true;\n}\n\n\n# Ruby code with syntax highlighting\nGitHubPages::Dependencies.gems.each do |gem, version|\n  s.add_dependency(gem, \"= #{version}\")\nend\n\n\nHeader 4\n\n\n  This is an unordered list following a header.\n  This is an unordered list following a header.\n  This is an unordered list following a header.\n\n\nHeader 5\n\n\n  This is an ordered list following a header.\n  This is an ordered list following a header.\n  This is an ordered list following a header.\n\n\nHeader 6\n\n\n  \n    \n      head1\n      head two\n      three\n    \n  \n  \n    \n      ok\n      good swedish fish\n      nice\n    \n    \n      out of stock\n      good and plenty\n      nice\n    \n    \n      ok\n      good oreos\n      hmm\n    \n    \n      ok\n      good zoute drop\n      yumm\n    \n  \n\n\nThere’s a horizontal rule below this.\n\n\n\nHere is an unordered list:\n\n\n  Item foo\n  Item bar\n  Item baz\n  Item zip\n\n\nAnd an ordered list:\n\n\n  Item one\n  Item two\n  Item three\n  Item four\n\n\nAnd a nested list:\n\n\n  level 1 item\n    \n      level 2 item\n      level 2 item\n        \n          level 3 item\n          level 3 item\n        \n      \n    \n  \n  level 1 item\n    \n      level 2 item\n      level 2 item\n      level 2 item\n    \n  \n  level 1 item\n    \n      level 2 item\n      level 2 item\n    \n  \n  level 1 item\n\n\nSmall image\n\n\n\nLarge image\n\n\n\nDefinition lists\n\n\n  Name\n  Godzilla\n  Born\n  1952\n  Birthplace\n  Japan\n  Color\n  Green\n\n\nLong, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Or is it?\n\n\nThe final element.\n\n",
      "categories": ["rcode"],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/rcode/2017-11-23-example-content-ii/"
    },{
      "image": {"path":"/assets/img/blog/example-content-iii.jpg","srcset":{"1060w":"/assets/img/blog/example-content-iii.jpg","530w":"/assets/img/blog/example-content-iii@0,5x.jpg","265w":"/assets/img/blog/example-content-iii@0,25x.jpg"}},
      "title": "Example Content III",
      "date": "2018-06-01 00:00:00 -0700",
      "description": "A page showing Hydejack-specific markdown content.\n",
      "content": "Hydejack offers a few additional features to markup your markdown.\nDon’t worry, these are merely CSS classes added with kramdown’s {:...} syntax,\nso that your content remains compatible with other Jekyll themes.\n\nLarge Tables\n\n\n  \n    \n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n    \n  \n  \n    \n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n    \n    \n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n    \n    \n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n    \n    \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n    \n    \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n    \n    \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n    \n  \n\n\nCode blocks\n\n// Example can be run directly in your JavaScript console\n\n// Create a function that takes two arguments and returns the sum of those\n// arguments\nvar adder = new Function(\"a\", \"b\", \"return a + b\");\n\n// Call the function\nadder(2, 6);\n// &gt; 8\n\n\nMath\nLorem ipsum f(x)=x2f(x) = x^2f(x)=x2.\n\nϕ(x,y)=ϕ(∑i=1nxiei,∑j=1nyjej)=∑i=1n∑j=1nxiyjϕ(ei,ej)=(x1,…,xn)(ϕ(e1,e1)⋯ϕ(e1,en)⋮⋱⋮ϕ(en,e1)⋯ϕ(en,en))(y1⋮yn)\\begin{aligned}\n  \\phi(x,y) &amp;= \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right) \\\\[2em]\n            &amp;= \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j)            \\\\[2em]\n            &amp;= (x_1, \\ldots, x_n)\n               \\left(\\begin{array}{ccc}\n                 \\phi(e_1, e_1)  &amp; \\cdots &amp; \\phi(e_1, e_n) \\\\\n                 \\vdots          &amp; \\ddots &amp; \\vdots         \\\\\n                 \\phi(e_n, e_1)  &amp; \\cdots &amp; \\phi(e_n, e_n)\n               \\end{array}\\right)\n               \\left(\\begin{array}{c}\n                 y_1    \\\\\n                 \\vdots \\\\\n                 y_n\n               \\end{array}\\right)\n\\end{aligned}ϕ(x,y)​=ϕ(i=1∑n​xi​ei​,j=1∑n​yj​ej​)=i=1∑n​j=1∑n​xi​yj​ϕ(ei​,ej​)=(x1​,…,xn​)⎝⎜⎜⎛​ϕ(e1​,e1​)⋮ϕ(en​,e1​)​⋯⋱⋯​ϕ(e1​,en​)⋮ϕ(en​,en​)​⎠⎟⎟⎞​⎝⎜⎜⎛​y1​⋮yn​​⎠⎟⎟⎞​​\n\nMessage boxes\nNOTE: You can add a message box.\n\nLarge text\nYou can add large text.\n\nLarge images\n\n\nCaptions to images\n\nA caption to an image.\n\nLarge quotes\n\n  You can make a quote “pop out”.\n\n\nFaded text\nI’m faded, faded, faded.\n\n",
      "categories": ["data_analytics"],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/data_analytics/2018-06-01-example-content-iii/"
    },{
      "image": {"path":"/assets/img/blog/example-content-iii.jpg","srcset":{"1060w":"/assets/img/blog/example-content-iii.jpg","530w":"/assets/img/blog/example-content-iii@0,5x.jpg","265w":"/assets/img/blog/example-content-iii@0,25x.jpg"}},
      "title": "Example Content III",
      "date": "2018-06-01 00:00:00 -0700",
      "description": "A page showing Hydejack-specific markdown content.\n",
      "content": "Hydejack offers a few additional features to markup your markdown.\nDon’t worry, these are merely CSS classes added with kramdown’s {:...} syntax,\nso that your content remains compatible with other Jekyll themes.\n\nLarge Tables\n\n\n  \n    \n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n    \n  \n  \n    \n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n    \n    \n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n    \n    \n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n    \n    \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n    \n    \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n    \n    \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n    \n  \n\n\nCode blocks\n\n// Example can be run directly in your JavaScript console\n\n// Create a function that takes two arguments and returns the sum of those\n// arguments\nvar adder = new Function(\"a\", \"b\", \"return a + b\");\n\n// Call the function\nadder(2, 6);\n// &gt; 8\n\n\nMath\nLorem ipsum f(x)=x2f(x) = x^2f(x)=x2.\n\nϕ(x,y)=ϕ(∑i=1nxiei,∑j=1nyjej)=∑i=1n∑j=1nxiyjϕ(ei,ej)=(x1,…,xn)(ϕ(e1,e1)⋯ϕ(e1,en)⋮⋱⋮ϕ(en,e1)⋯ϕ(en,en))(y1⋮yn)\\begin{aligned}\n  \\phi(x,y) &amp;= \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right) \\\\[2em]\n            &amp;= \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j)            \\\\[2em]\n            &amp;= (x_1, \\ldots, x_n)\n               \\left(\\begin{array}{ccc}\n                 \\phi(e_1, e_1)  &amp; \\cdots &amp; \\phi(e_1, e_n) \\\\\n                 \\vdots          &amp; \\ddots &amp; \\vdots         \\\\\n                 \\phi(e_n, e_1)  &amp; \\cdots &amp; \\phi(e_n, e_n)\n               \\end{array}\\right)\n               \\left(\\begin{array}{c}\n                 y_1    \\\\\n                 \\vdots \\\\\n                 y_n\n               \\end{array}\\right)\n\\end{aligned}ϕ(x,y)​=ϕ(i=1∑n​xi​ei​,j=1∑n​yj​ej​)=i=1∑n​j=1∑n​xi​yj​ϕ(ei​,ej​)=(x1​,…,xn​)⎝⎜⎜⎛​ϕ(e1​,e1​)⋮ϕ(en​,e1​)​⋯⋱⋯​ϕ(e1​,en​)⋮ϕ(en​,en​)​⎠⎟⎟⎞​⎝⎜⎜⎛​y1​⋮yn​​⎠⎟⎟⎞​​\n\nMessage boxes\nNOTE: You can add a message box.\n\nLarge text\nYou can add large text.\n\nLarge images\n\n\nCaptions to images\n\nA caption to an image.\n\nLarge quotes\n\n  You can make a quote “pop out”.\n\n\nFaded text\nI’m faded, faded, faded.\n\n",
      "categories": ["payments"],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/payments/2018-06-01-example-content-iii/"
    },{
      "image": {"path":"/assets/img/blog/example-content-iii.jpg","srcset":{"1060w":"/assets/img/blog/example-content-iii.jpg","530w":"/assets/img/blog/example-content-iii@0,5x.jpg","265w":"/assets/img/blog/example-content-iii@0,25x.jpg"}},
      "title": "Example Content III",
      "date": "2018-06-01 00:00:00 -0700",
      "description": "A page showing Hydejack-specific markdown content.\n",
      "content": "Hydejack offers a few additional features to markup your markdown.\nDon’t worry, these are merely CSS classes added with kramdown’s {:...} syntax,\nso that your content remains compatible with other Jekyll themes.\n\nLarge Tables\n\n\n  \n    \n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n      Default aligned\n      Left aligned\n      Center aligned\n      Right aligned\n    \n  \n  \n    \n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n      First body part\n      Second cell\n      Third cell\n      fourth cell\n    \n    \n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n      Second line\n      foo\n      strong\n      baz\n    \n    \n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n      Third line\n      quux\n      baz\n      bar\n    \n    \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n      Second body\n       \n       \n       \n    \n    \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n      2 line\n       \n       \n       \n    \n    \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n      Footer row\n       \n       \n       \n    \n  \n\n\nCode blocks\n\n// Example can be run directly in your JavaScript console\n\n// Create a function that takes two arguments and returns the sum of those\n// arguments\nvar adder = new Function(\"a\", \"b\", \"return a + b\");\n\n// Call the function\nadder(2, 6);\n// &gt; 8\n\n\nMath\nLorem ipsum f(x)=x2f(x) = x^2f(x)=x2.\n\nϕ(x,y)=ϕ(∑i=1nxiei,∑j=1nyjej)=∑i=1n∑j=1nxiyjϕ(ei,ej)=(x1,…,xn)(ϕ(e1,e1)⋯ϕ(e1,en)⋮⋱⋮ϕ(en,e1)⋯ϕ(en,en))(y1⋮yn)\\begin{aligned}\n  \\phi(x,y) &amp;= \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right) \\\\[2em]\n            &amp;= \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j)            \\\\[2em]\n            &amp;= (x_1, \\ldots, x_n)\n               \\left(\\begin{array}{ccc}\n                 \\phi(e_1, e_1)  &amp; \\cdots &amp; \\phi(e_1, e_n) \\\\\n                 \\vdots          &amp; \\ddots &amp; \\vdots         \\\\\n                 \\phi(e_n, e_1)  &amp; \\cdots &amp; \\phi(e_n, e_n)\n               \\end{array}\\right)\n               \\left(\\begin{array}{c}\n                 y_1    \\\\\n                 \\vdots \\\\\n                 y_n\n               \\end{array}\\right)\n\\end{aligned}ϕ(x,y)​=ϕ(i=1∑n​xi​ei​,j=1∑n​yj​ej​)=i=1∑n​j=1∑n​xi​yj​ϕ(ei​,ej​)=(x1​,…,xn​)⎝⎜⎜⎛​ϕ(e1​,e1​)⋮ϕ(en​,e1​)​⋯⋱⋯​ϕ(e1​,en​)⋮ϕ(en​,en​)​⎠⎟⎟⎞​⎝⎜⎜⎛​y1​⋮yn​​⎠⎟⎟⎞​​\n\nMessage boxes\nNOTE: You can add a message box.\n\nLarge text\nYou can add large text.\n\nLarge images\n\n\nCaptions to images\n\nA caption to an image.\n\nLarge quotes\n\n  You can make a quote “pop out”.\n\n\nFaded text\nI’m faded, faded, faded.\n\n",
      "categories": ["rcode"],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/rcode/2018-06-01-example-content-iii/"
    },{
      "image": "/assets/img/blog/hydejack-9.jpg",
      "title": "Introducing Hydejack 9",
      "date": "2020-07-03 00:00:00 -0700",
      "description": "Version 9 is the most complete version of Hydejack yet. Modernized design, big headlines, and big new features.\n",
      "content": "Version 9 is the most complete version of Hydejack yet.\n\nModernized design, big headlines, big new features: Built-In Search, Sticky Table of Contents, and Auto-Hiding Navbar. That and more is Hydejack 9.\n\n\n  Linking in Style\n  Ready for the Big Screen\n  What’s in the Cards?\n  Built-In Search\n  Auto-Hiding Navbar\n  Sticky Table of Contents\n  …and much more\n  Even More to Come\n  Get It Now\n\n\nLinking in Style\n\nEver since the introduction of Dark Mode, link styles have been a bit of an issue. Specifically, finding an accent color that worked on both light and dark backgrounds was the problem. With Hydejack 9, the link style has been revamped so that legibility is no longer tied to the choice of accent_color, giving you much more freedom in creating a unique design flavor for your site.\n\nReady for the Big Screen\n\nThe theme on which Hydejack is based was designed for a different era of the web. Hydejack has inherited many of its limitations, but over time I’ve made adjustments, such as centering the content column for better reading ergonomics.\n\nWith version 9, Hydejack takes full advantage of large displays. Whether it’s design indulgences such as oversized headlines, or quality of life improvements such as a floating table of contents, Hydejack now finds use for all that extra screen real estate1.\n\nWhat’s in the Cards?\n\nHydejack 9 now lets you use content cards for both projects and posts. \nThe cards have been redesigned with a new hover style and drop shadows and they retain their unique transition-to-next-page animations, which now also work on the blog layout. The new grid layout lets you do that.\n\nGood images are key to making the most out of content cards. For that reason, a chapter on images has been added to the documentation.\n\nBuilt-In Search\n\nHydejack now has Built-In Search. It even works offline. I’ve been prototyping many approaches and eventually settled on a fully client-side, off-the-main thread solution that perfectly fits the use case of personal sites and shows surprisingly good results2.\n\nThe new search UI is custom made for Hydejack and shows beautiful previews of your posts and pages, right on top of your regular content.\n\nTogether with the Auto-Hiding Navbar, your entire content library is now only a couple of keystrokes away.\n\nAuto-Hiding Navbar\n\nA navbar that’s there when you need it, and disappears when you don’t. Simple as that.\n\nSticky Table of Contents\n\nAlready a staple on so many sites on the web, this pattern is now also available in Hydejack. \nWhat’s unique about it is that it simply picks up the table of contents already created by kramdown’s {:toc} tag and transparently upgrades it to a fully dynamic version.\n\n…and much more\n\nOther noteworthy changes include:\n\n  Support for Jekyll 4\n  Choice between MathJax and KaTeX for math rendering\n  Use of jekyll-include-cache for drastically improved page building speeds\n  New variables configuration file — adjust content width, sidebar width, font size, etc…\n  …and the option to disable grouping projects by year.\n\n\nRead the the CHANGELOG for the full scope of features and improvements made in Hydejack 9.\nMaybe just glance at it to confirm that it is indeed a pretty long list.\n\nEven More to Come\n\nNew features for 9.1 are already lined up. Code block headers and code line highlights for even better technical blogging, as well as download buttons on the resume page for PDF, vCard, and Resume JSON are just around the corner.\n\nGet It Now\nThe Free Version of Hydejack is now availabe on RubyGems\nand for the first time also on GitHub Packages. \nThe source code is available on GitHub as always.\n\nThe PRO Version is scheduled to release on July 7th on Gumroad. Pre-Orders are open now:\n\nLoading…\n\n\n  \n    \n      If you are a fan of the old two-column layout, or don’t like modern design tropes such as mega headlines, Hydejack lets you revert these changes on a case-by-case basis via configuration options. &#x21a9;&#xfe0e;\n    \n    \n\n      Search was mainly tested for English and German. Please let me know about issues in other languages. \n  While I’ve tried to find a multi-language solution, most showed drastically worse  results for the English base case.\n  If you’re technically inclined, you can adopt the code located in _includes/js/search-worker.js to your needs. &#x21a9;&#xfe0e;\n    \n  \n\n",
      "categories": ["payments"],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/payments/2020-07-03-introducing-hydejack-9/"
    },{
      "image": "/assets/img/blog/hydejack-9.jpg",
      "title": "Introducing Hydejack 9",
      "date": "2020-07-03 00:00:00 -0700",
      "description": "Version 9 is the most complete version of Hydejack yet. Modernized design, big headlines, and big new features.\n",
      "content": "Version 9 is the most complete version of Hydejack yet.\n\nModernized design, big headlines, big new features: Built-In Search, Sticky Table of Contents, and Auto-Hiding Navbar. That and more is Hydejack 9.\n\n\n  Linking in Style\n  Ready for the Big Screen\n  What’s in the Cards?\n  Built-In Search\n  Auto-Hiding Navbar\n  Sticky Table of Contents\n  …and much more\n  Even More to Come\n  Get It Now\n\n\nLinking in Style\n\nEver since the introduction of Dark Mode, link styles have been a bit of an issue. Specifically, finding an accent color that worked on both light and dark backgrounds was the problem. With Hydejack 9, the link style has been revamped so that legibility is no longer tied to the choice of accent_color, giving you much more freedom in creating a unique design flavor for your site.\n\nReady for the Big Screen\n\nThe theme on which Hydejack is based was designed for a different era of the web. Hydejack has inherited many of its limitations, but over time I’ve made adjustments, such as centering the content column for better reading ergonomics.\n\nWith version 9, Hydejack takes full advantage of large displays. Whether it’s design indulgences such as oversized headlines, or quality of life improvements such as a floating table of contents, Hydejack now finds use for all that extra screen real estate1.\n\nWhat’s in the Cards?\n\nHydejack 9 now lets you use content cards for both projects and posts. \nThe cards have been redesigned with a new hover style and drop shadows and they retain their unique transition-to-next-page animations, which now also work on the blog layout. The new grid layout lets you do that.\n\nGood images are key to making the most out of content cards. For that reason, a chapter on images has been added to the documentation.\n\nBuilt-In Search\n\nHydejack now has Built-In Search. It even works offline. I’ve been prototyping many approaches and eventually settled on a fully client-side, off-the-main thread solution that perfectly fits the use case of personal sites and shows surprisingly good results2.\n\nThe new search UI is custom made for Hydejack and shows beautiful previews of your posts and pages, right on top of your regular content.\n\nTogether with the Auto-Hiding Navbar, your entire content library is now only a couple of keystrokes away.\n\nAuto-Hiding Navbar\n\nA navbar that’s there when you need it, and disappears when you don’t. Simple as that.\n\nSticky Table of Contents\n\nAlready a staple on so many sites on the web, this pattern is now also available in Hydejack. \nWhat’s unique about it is that it simply picks up the table of contents already created by kramdown’s {:toc} tag and transparently upgrades it to a fully dynamic version.\n\n…and much more\n\nOther noteworthy changes include:\n\n  Support for Jekyll 4\n  Choice between MathJax and KaTeX for math rendering\n  Use of jekyll-include-cache for drastically improved page building speeds\n  New variables configuration file — adjust content width, sidebar width, font size, etc…\n  …and the option to disable grouping projects by year.\n\n\nRead the the CHANGELOG for the full scope of features and improvements made in Hydejack 9.\nMaybe just glance at it to confirm that it is indeed a pretty long list.\n\nEven More to Come\n\nNew features for 9.1 are already lined up. Code block headers and code line highlights for even better technical blogging, as well as download buttons on the resume page for PDF, vCard, and Resume JSON are just around the corner.\n\nGet It Now\nThe Free Version of Hydejack is now availabe on RubyGems\nand for the first time also on GitHub Packages. \nThe source code is available on GitHub as always.\n\nThe PRO Version is scheduled to release on July 7th on Gumroad. Pre-Orders are open now:\n\nLoading…\n\n\n  \n    \n      If you are a fan of the old two-column layout, or don’t like modern design tropes such as mega headlines, Hydejack lets you revert these changes on a case-by-case basis via configuration options. &#x21a9;&#xfe0e;\n    \n    \n\n      Search was mainly tested for English and German. Please let me know about issues in other languages. \n  While I’ve tried to find a multi-language solution, most showed drastically worse  results for the English base case.\n  If you’re technically inclined, you can adopt the code located in _includes/js/search-worker.js to your needs. &#x21a9;&#xfe0e;\n    \n  \n\n",
      "categories": ["rcode"],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/rcode/2020-07-03-introducing-hydejack-9/"
    },{
      "image": "/assets/img/blog/Data_Science_VD.jpg",
      "title": "What is Data Science?",
      "date": "2020-08-20 00:00:00 -0700",
      "description": "When I first became interested in Data Science, the first thing I did was try to understand exactly what it was.  Googling around, I found an article that included an interesting Venn Diagram.\n",
      "content": "This diagram does a pretty nice job is showing the constituent parts of “Data Science”.\n\n\n\n\n\nThe diagram shows that Data Science really needs a combination of three skill-sets: Hacking Skills, Math and Statistics Knowledge, and Substantive Expertise.\nTrue Data Science would be where these three disciplines intersect:\n\n\n  \n  \n    Real Data Science\n\n\n\n\nDrew Conway, Co-author of Machine Learning for Hackers 1, makes special mention of what he calls\nthe Danger Zone, or where he classifies people who know “enough to be dangerous”:\n\n\n  \n  \n    The \"Danger Zone\"\n\n\n\n  Hacking Skills\n  Math and Statistics Knowledge\n  Substantive Expertise\n  Danger Zone\n\n\nHacking Skills\n\nYou could consider Hacking Skills to be a flavor of programming skills, but more specifically\nthe skills necessary to “ready” the data necessary for any data analysis project.\nSometimes this is referred to as Data Wrangling, or Data Munging.\nAs a Data Analyst, you are going to spend a lot more time finding data and preparing data than you\nmight have originally thought (sometimes up to 80% of your time on a project will be spent\ndoing data clean-up and preparation).\n\nThese two terms (Wrangling and Munging) are worth further defining, because each is slightly\ndifferent.  Wrangling refers to what is necessary to identify, gather, clean, sort, and format data so\nit is suitable to use in your analysis.  The meaning is in the sense of wrangling cows.\nMungling is a bit more obscure.  The orginal meaning goes back to an old 60’s acronym for “Mash Until No Good” (MUNG).\nData that has been though a lot of transformations, using different edits and formats, passed\nfrom system to system, database to database, can become degraded or Mung’ed.  Maybe you could more correctly\ncall Data Mungling Data Un-Munging, since you are attempting to reverse the degradation so the data is more useful.\n\nMath and Statistics Knowledge\n\nEnough knowledge of statistics is required so you can extract meaning from your data.\nSo you will need to know enough statistical and mathematical methods to gain \ninsights, reveal patterns and predict outcomes. Academic types are usually very strong in this\narea, but being an expert in statistics is not necessarily required.  But you will need to\nknow which techniques to apply, and most importantly will need a good understanding of the \nmeaning of the statistical outcomes of each technique.\n\nSubstantive Expertise\n\nWithout subject matter expertise in the area in which you are doing Data Science, pretty\nmuch all you will be able to do is to crunch the data you have gathered using some sort of\nmathematical model, maybe making predictions or decisions based on your input data (sometimes \ncalled a “training set”). This could be described generally as machine learning, shown in the Venn\ndiagram as the intersection between Hacking and Statistics Knowledge.\n\nBut for Data Science to really be a Science, it needs to include more than just data and statistical technique.\nConway specifially defines Science as:\n\n\n  Science is about discovery and building knowledge, which requires some motivating questions about the world and hypotheses that can be brought to data and tested with statistical methods.\n\n\nTo know what questions to ask, and to fully engage in a process of testing and validation, you will need\nto know a lot about the subject area in which you are working.  Gaming Payments in different than\nViticulture (grape growing), is different than Pharmaceutical Distribution.\n\nConway also show the intersection between statistical skills and substantive expertise as\n“Traditional Research”.  This might have been true at one time, but from what I can tell from\nreading a bunch of real blog posts, academic Data Science practitioners seems to have some pretty\ngood Hacking Skills!\n\nDanger Zone\n\nThis is the area Conway identifies as the most problematic.  It consists of people\nwho know the business (Substantive Expertise), who also skillful enough programmers to prepare\nsome data for analysis (Hacking Skills), but aren’t sufficiently knowledgable about\nStatistics and Math to really understand the output of tools they may be using.\n\nI believe the reason this “zone” even exists is because there are tools that make it fairly\neasy to digest and process raw data, and to produce some type of output which might look like\nit means something.  Tools such as R language IDE’s (e.g., RStudio) and Python IDE’s (i.e., Rodeo or Spyder) make\nit pretty easy to generate some output which could be easy to misinterpret unless the\nmathematics and statisical theory behind the algorithms is understood.\n\nFortunately, the more you work with these tools and the more time is spent on understanding\nthe underlying mathematics, the less likely this problem is to occur.\n\n\n  \n    \n      Machine Learning for Hackers by Drew Conway, John Myles White &#x21a9;&#xfe0e;\n    \n  \n\n",
      "categories": ["data_analytics"],
      "tags": [],
      
      "collection": "posts",
      "url": "/blog/data_analytics/2020-08-20-what-is-data-science/"
    },{
      
      "title": "Data Analytics",
      "date": "2020-08-21 13:57:25 -0700",
      "description": "This is a featured category, which have their own page. Check out _featured_tags/example.md to learn how to create your own.\n",
      "content": "\n",
      "categories": [],
      "tags": [],
      
      "collection": "featured_categories",
      "url": "/blog/data-analytics/"
    },{
      
      "title": "Gaming Payments",
      "date": "2020-08-21 13:57:25 -0700",
      "description": "This is a featured category, which have their own page. Check out _featured_tags/example.md to learn how to create your own.\n",
      "content": "\n",
      "categories": [],
      "tags": [],
      
      "collection": "featured_categories",
      "url": "/blog/payments/"
    },{
      
      "title": "R Coding",
      "date": "2020-08-21 13:57:25 -0700",
      "description": "This is a featured category, which have their own page. Check out _featured_tags/example.md to learn how to create your own.\n",
      "content": "\n",
      "categories": [],
      "tags": [],
      
      "collection": "featured_categories",
      "url": "/blog/rcode/"
    },{
      "image": "/assets/img/projects/hy-push-state.svg",
      "title": "hy-components",
      "date": "2016-01-01 00:00:00 -0800",
      "description": "Using the Free Version of Hydejack as a product page on GitHub Pages.\n",
      "content": "\n",
      "categories": [],
      "tags": [],
      
      "collection": "projects",
      "url": "/projects/hy-components/"
    },{
      "image": {"path":"assets/img/projects/hydejack-site.jpg","srcset":{"2560w":"assets/img/projects/hydejack-site.jpg","1280w":"assets/img/projects/hydejack-site@0,5x.jpg","640w":"assets/img/projects/hydejack-site@0,25x.jpg"}},
      "title": "Hydejack Site",
      "date": "2016-01-01 00:00:00 -0800",
      "description": "While Hydejack is built for personal sites, it’s versatility allows it to be used a product page as well.\n",
      "content": "\n",
      "categories": [],
      "tags": [],
      
      "collection": "projects",
      "url": "/projects/hydejack-site/"
    },{
      "image": {"path":"assets/img/projects/qwtel.jpg","srcset":{"2560w":"assets/img/projects/qwtel.jpg","1280w":"assets/img/projects/qwtel@0,5x.jpg","640w":"assets/img/projects/qwtel@0,25x.jpg"}},
      "title": "@qwtel",
      "date": "2020-06-01 00:00:00 -0700",
      "description": "This is how I use Hydejack on my personal site.  Much of the development is informed from my experience of using it myself, creating a tight feedback loop.\n",
      "content": "For my personal site I’ve toned it down a bit. Instead of a flashy sidebar image, I chose a solid background color.\nHowever, I’ve given certain pages big sidebar images,\nand let Hydejack blend back to normal when the user navigates away.\n\nWhile I love the font used for Hydejack’s headings, for my personal site I felt less of a need to control the typesetting.\nThat’s why I’m not using Google Fonts, and instead use whatever is the default for the reader’s operating system.\n\ngoogle_fonts: false\nfont:         system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\nfont_heading: system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n\n\nThe configuration I use to enable the system font on my site. Feel free to copy!\n",
      "categories": [],
      "tags": [],
      
      "collection": "projects",
      "url": "/projects/qwtel/"
    }
  ]
}

